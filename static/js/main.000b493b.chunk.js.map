{"version":3,"sources":["components/MainPage.tsx","store/autorizes.ts","store/registeredUser.ts","store/selectedList.tsx","store/index.ts","components/Navigation/Login.tsx","helpers/constants.ts","helpers/fetchData.ts","components/Navigation/Logout.tsx","components/Navigation/Navigation.tsx","components/EnterForm.tsx","components/RegisterForm.tsx","helpers/formValidation.ts","components/Navigation/LeftNav.tsx","components/SmallComponents/ModalItem.tsx","components/SmallComponents/ModalList.tsx","components/SmallComponents/ModalLinks.tsx","components/SmallComponents/Buttons.tsx","helpers/setNumbers.tsx","components/SmallComponents/ModalWindow.tsx","components/Pages/First.tsx","components/SmallComponents/TableItem.tsx","components/Pages/Second.tsx","components/SmallComponents/UsersList.tsx","components/SmallComponents/AddForm.tsx","components/Pages/Third.tsx","App.tsx","index.tsx"],"names":["MainPage","setAuthorization","value","type","payload","reducer","action","setRegisteredUser","list","filter","item","rootReducer","combineReducers","authorization","authorizationReducer","registeredUser","registeredUserReducer","selectedList","selectedListReducer","getAuthorization","state","getRegisteredUser","getSelectedList","store","createStore","composeWithDevTools","applyMiddleware","thunk","Login","className","to","exact","baseUrl","checkToken","a","fetch","method","headers","Accept","credentials","response","json","data","console","log","fetchLogData","url","dataFromUser","body","JSON","stringify","fetchLogDataWithToken","token","Logout","userName","useSelector","dispatch","useDispatch","handleLogout","localStorage","getItem","removeItem","onClick","Navigation","isAuthorized","EnterForm","useState","mail","setMail","password","setPassword","history","useHistory","err","setErr","handleEnter","setItem","push","placeholder","name","onChange","ev","target","RegisterForm","email","confirmedPassword","setConfirmedPassword","setName","inputErrors","setInputErrors","tryToMakeRegistration","isRegistrationDone","errors","trim","length","includes","formValidation","Object","values","every","LeftNav","ModalItem","number","isActive","ModalList","numbers","scrollableEl","ref","map","key","Date","now","ModalLinks","activeList","index","container","scrollTop","scrollTo","current","Buttons","showModal","setNumbers","n","nums","i","ModalWindow","useMemo","useRef","First","isVisibleModal","setIsVisibleModal","TableItem","isChecked","checked","setSelectedItem","removeSelectedItem","selectItem","Second","id","handleSelect","UsersList","AddForm","surname","setSurname","phone","setPhone","test","addFormValidation","Third","activeSection","setActiveSection","content","defineComponent","App","isLogged","useEffect","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.000b493b.chunk.js","sourcesContent":["import React from 'react';\n\nexport const MainPage: React.FC = () => {\n  return (\n    <>\n      <p>Home Page is here</p>\n    </>\n  )\n}","import { AnyAction } from 'redux';\n\nconst SET_AUTHORIZATION = 'SET_AUTHORIZATION';\n\nexport const setAuthorization = (value: boolean) => ({ type: SET_AUTHORIZATION, payload: value });\n\nconst reducer = (value = false, action: AnyAction) => {\n  switch (action.type) {\n    case SET_AUTHORIZATION:\n      return action.payload;\n\n    default:\n      return value;\n  }\n};\n\nexport default reducer;","import { AnyAction } from 'redux';\n\nconst SET_REGISTERED_USER = 'SET_REGISTERED_USER';\n\nexport const setRegisteredUser = (value: string) => ({ type: SET_REGISTERED_USER, payload: value });\n\nconst reducer = (value = '', action: AnyAction) => {\n  switch (action.type) {\n    case SET_REGISTERED_USER:\n      return action.payload;\n\n    default:\n      return value;\n  }\n};\n\nexport default reducer;","import { AnyAction } from 'redux';\n\nconst SET_SELECTED_ITEM = 'SET_SELECTED_ITEM';\nconst REMOVE_SELECTED_ITEM = 'REMOVE_SELECTED_ITEM';\nconst SELECT_ALL= 'SELECT_ALL';\nconst CANCEL_ALL= 'CANCEL_ALL';\n\nexport const cancelAll = () => ({ type: CANCEL_ALL });\nexport const selectAll = (list: number[]) => ({ type: SELECT_ALL, payload: list });\nexport const setSelectedItem = (value: number) => ({ type: SET_SELECTED_ITEM, payload: value });\nexport const removeSelectedItem = (value: number) => ({ type: REMOVE_SELECTED_ITEM, payload: value });\n\nconst reducer = (list = [], action: AnyAction) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM:\n      return [...list, action.payload];\n    case REMOVE_SELECTED_ITEM:\n      return list.filter(item => item !== action.payload);\n    case SELECT_ALL:\n      return [...action.payload];\n    case CANCEL_ALL:\n      return [];\n    default:\n      return list;\n  }\n};\n\nexport default reducer;","import thunk from 'redux-thunk';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport authorizationReducer from './autorizes';\nimport registeredUserReducer from './registeredUser';\nimport selectedListReducer from './selectedList';\n\n\nconst rootReducer = combineReducers({\n  authorization: authorizationReducer,\n  registeredUser: registeredUserReducer,\n  selectedList: selectedListReducer,\n});\n\nexport const getAuthorization = (state: RootState) => state.authorization;\nexport const getRegisteredUser = (state: RootState) => state.registeredUser;\nexport const getSelectedList = (state: RootState) => state.selectedList;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Login = () => {\n  return (\n    <span className=\"navigation__wrapper\">\n    <li className=\"navigation__item\">\n      <NavLink  className=\"navigation__link\" to=\"/enter/\" exact>\n        <p className=\"navigation__text\">\n          Enter\n        </p>\n      </NavLink>\n    </li>\n    <li className=\"navigation__item\">\n      <NavLink className=\"navigation__link\" to=\"/register/\" exact>\n        <p className=\"navigation__text\">\n          Register\n        </p>\n      </NavLink>\n    </li>\n  </span>\n  )\n}","export const baseUrl = 'http://localhost:3002';\n\nexport const checkToken = async (value: string) => {\n  const response = await fetch(`http://localhost:3002/check`, \n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${value}`,\n        Accept: 'application/json',\n      },\n      credentials: 'include',\n    }\n  )\n  const data = await response.json();\n  console.log(data, response, '4444444')\n}\n","import { baseUrl } from './constants'; \nexport const fetchLogData = async (method: string, url: string, dataFromUser: any) => {\n  const response = await fetch(`${baseUrl}${url}`, \n    {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      credentials: 'include',\n      body: JSON.stringify(dataFromUser)\n    }\n  )\n  const data = await response.json();\n  return data;\n}\n\nexport const getData = async (url: string) => {\n  const response = await fetch(`${baseUrl}${url}`, \n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      credentials: 'include',\n    }\n  )\n  const data = await response.json();\n  return data;\n}\n\nexport const fetchLogDataWithToken = async (method: string, url: string, dataFromUser: any, token: string | null) => {\n  console.log(`${baseUrl}${url}`)\n  const response = await fetch(`${baseUrl}${url}`, \n    {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n        Accept: 'application/json',\n      },\n      credentials: 'include',\n      body: JSON.stringify(dataFromUser)\n    }\n  )\n  console.log(23)\n  console.log(response)\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchLogDataWithToken } from '../../helpers/fetchData';\nimport { getRegisteredUser } from '../../store';\nimport { setAuthorization } from '../../store/autorizes';\nimport { setRegisteredUser } from '../../store/registeredUser';\n\nexport const Logout = () => {\n  const userName = useSelector(getRegisteredUser);\n  const dispatch = useDispatch();\n  const handleLogout = async () => {\n    console.log('1234567')\n    await fetchLogDataWithToken('POST', '/logout', {}, localStorage.getItem('token'));\n    console.log(1)\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch(setAuthorization(false));\n    console.log(1)\n    dispatch(setRegisteredUser(''));\n  }\n\n  return (\n    <span className=\"navigation__wrapper\">\n    <li className=\"navigation__item\">\n      <button onClick={handleLogout} className=\"navigation__button\">\n          Logout\n      </button>\n    </li>\n    <li className=\"navigation__item\">\n        <p className=\"navigation__text\">\n          {userName}\n        </p>\n    </li>\n  </span>\n  )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getAuthorization } from '../../store';\nimport { Login } from './Login';\nimport { Logout } from './Logout';\n\nexport const Navigation: React.FC = () => {\n  const isAuthorized = useSelector(getAuthorization);\n\n  return (\n    <ul className=\"navigation\">   \n      {\n        !isAuthorized \n          ? <Login/>\n          : <Logout />\n      }\n    </ul>\n  )\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { checkToken } from '../helpers/constants';\nimport { fetchLogData } from '../helpers/fetchData';\nimport { setAuthorization } from '../store/autorizes';\nimport { setRegisteredUser } from '../store/registeredUser';\n\nexport const EnterForm: React.FC = () => {\n  const [mail, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [err, setErr] = useState('');\n\n  const handleEnter = async () => {\n    console.log('')\n    const data = await fetchLogData('POST', '/enter', { mail, password })\n    if(data.token) {\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', data.userName);\n      dispatch(setAuthorization(true));\n      checkToken(data.token)\n      dispatch(setRegisteredUser(data.userName));\n      history.push('/page1');\n    } else {\n      console.log('else')\n      setErr('Check your mail and password')\n    }\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <form className=\"form\">\n        <p>{err}</p>\n        <input \n          className=\"form__input\" \n          type=\"email\" \n          placeholder='email' \n          name=\"email\" \n          value={mail} \n          onChange={(ev) => {\n            setMail(ev.target.value);\n            setErr('');\n          }}\n        />\n        <p className=\"form__error\"></p>\n        <input \n          className=\"form__input\" \n          type=\"password\" \n          placeholder=\"password\" \n          value={password} \n          onChange={(ev) => {\n            setPassword(ev.target.value);\n            setErr('');\n          }}\n        />\n        <p className=\"form__error\"></p>\n        <button className=\"form__button\"type='button' onClick={handleEnter}>Enter</button>\n      </form>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { formValidation } from '../helpers/formValidation';\nimport { fetchLogData } from '../helpers/fetchData';\ninterface Resp {\n  isRegistrationDone: boolean;\n  userName: string;\n}\n\nexport const RegisterForm: React.FC = () => {\n  const [email, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmedPassword, setConfirmedPassword] = useState('');\n  const [name, setName] = useState('');\n  const [inputErrors, setInputErrors] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmedPassword: ''\n  })\n\n  const history = useHistory();\n\n  const handleSubmit = () => {\n    const errors = formValidation(password, confirmedPassword, name, email);\n    const withoutErrors = Object.values(errors).every(value => value === '');\n    if (withoutErrors) {\n      tryToMakeRegistration();\n    } else {\n      setInputErrors(errors);\n    }\n  }\n\n  const tryToMakeRegistration = async () => {\n    const data = await fetchLogData('POST', '/register', { email, password, name });\n      if (data.isRegistrationDone) { \n        history.push('/enter');\n      }\n  \n  }\n\n  return (\n    <div className=\"wrapper\">\n      <form className=\"form\">\n        <input \n          className=\"form__input\" \n          type=\"text\" \n          placeholder=\"Name\" \n          value={name} \n          onChange={(ev) => {\n            setName(ev.target.value);\n            setInputErrors({...inputErrors, name: ''})\n          }}\n        />\n        <p className=\"form__error\">{inputErrors.name}</p>\n        <input \n          className=\"form__input\" \n          type=\"email\" \n          placeholder='Email'  \n          value={email} \n          onChange={(ev) => {\n            setMail(ev.target.value);\n            setInputErrors({...inputErrors, email: ''})\n          }}\n        />\n        <p className=\"form__error\">{inputErrors.email}</p>\n        <input \n          className=\"form__input\" \n          type=\"password\" \n          placeholder=\"Password\" \n          value={password} \n          onChange={(ev) => {\n            setPassword(ev.target.value);\n            setInputErrors({...inputErrors, password: '', confirmedPassword: ''})\n          }}\n        />\n        <p className=\"form__error\">{inputErrors.password}</p>\n        <input \n          className=\"form__input\" \n          type=\"password\" \n          placeholder=\"Confirm password\" \n          value={confirmedPassword} \n          onChange={(ev) => setConfirmedPassword(ev.target.value)}\n        />\n        <p className=\"form__error\">{inputErrors.confirmedPassword}</p>\n        <button className=\"form__button\" type='button' onClick={handleSubmit}>Register</button>\n      </form>\n    </div>\n  )\n}","export const formValidation = (password: string, confirmedPassword: string, name: string, email: string) => {\n  const errors = {\n    name: '',\n    email: '',\n    password: '',\n    confirmedPassword: ''\n  }\n\n  if (!(name.trim()).length) {\n    errors.name = 'Enter the correct name please'\n  }\n  if (!email.includes('@')) {\n    errors.email = 'Enter the correct email please'\n  }\n  if (password !== confirmedPassword) {\n    errors.confirmedPassword = 'Check your password please'\n  }\n  if (password.length < 7) {\n    errors.password = 'Password should be at least 6 characters'\n  }\n\n  return errors;\n}\n\nexport const addFormValidation = (phone: string, surname: string, name: string, email: string) => {\n  const errors = {\n    name: '',\n    email: '',\n    surname: '',\n    phone: '',\n  }\n\n  const regMail = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,6}\\b/;\n  const regPhone = /^\\+[0-9]{12}\\b/;\n\n  if (!(name.trim()).length) {\n    errors.name = 'Enter the correct name please'\n  }\n\n  if (!(surname.trim()).length) {\n    errors.surname = 'Enter the correct surname please'\n  }\n\n  if (!regMail.test(email)) {\n    errors.email = 'Enter the correct email please'\n  }\n\n  if (!regPhone.test(phone)) {\n    errors.phone = 'Enter the correct phone please'\n  }\n\n\n  return errors;\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const LeftNav = () => {\n  return (\n    <ul className=\"left-nav\">\n      <li className=\"left-nav__item\">\n        <NavLink to='/page1' className='left-nav__link'>Страница 1</NavLink>\n      </li>\n      <li className=\"left-nav__item\">\n        <NavLink to='/page2' className='left-nav__link'>Страница 2</NavLink>\n      </li>\n      <li className=\"left-nav__item\">\n        <NavLink to='/page3' className='left-nav__link'>Страница 3</NavLink>\n      </li>\n    </ul>\n  )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getSelectedList } from '../../store/index';\n\ninterface Props {\n  number: number;\n}\n\nexport const ModalItem: React.FC<Props> = ({ number }) => {\n  const activeList: number[] = useSelector(getSelectedList);\n  const isActive = activeList.includes(number);\n  return (\n    <li \n      className={!isActive ? \"options__item\" : \"options__item options__active-item\"} \n    >\n      <p className=\"options__text\">\n        {number}.\n      </p>\n      <p className=\"options__text\">\n        Text\n        &nbsp;\n        {number}\n      </p>\n    </li>\n  )\n}","import React from 'react';\nimport { ModalItem } from './ModalItem';\n\ninterface Props {\n  numbers: number[];\n  scrollableEl: any;\n}\n\nexport const ModalList: React.FC<Props> = ({ numbers, scrollableEl }) => {\n  return (\n    <ul className=\"options\" ref={scrollableEl}>\n    {\n      numbers.map((number) => <ModalItem number={number} key={Date.now() + number}/>)\n    }\n  </ul>\n  )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getSelectedList } from '../../store';\n\ninterface Props {\n  numbers: number[];\n  scrollableEl: any;\n}\n\nfunction scrollTo(index: number, container: any) {\n  container.scrollTop = index * 55;\n}\n\nexport const ModalLinks: React.FC<Props> = ({ numbers, scrollableEl }) => {\n  const activeList: number[] = useSelector(getSelectedList);\n   \n  return (\n    <ul className=\"modal__pages\">\n        {\n          numbers.map((number, index) => {\n            return (\n              <li className=\"modal__item\" key={Date.now() + number}>\n                <button \n                  className={\n                    activeList.includes(number) \n                    ? \"modal__page-button--active\" \n                    : \"modal__page-button\" \n                  } \n                  onClick={() => scrollTo(index, scrollableEl.current)}\n                >\n                  {number}\n                </button>\n              </li>\n            )\n          })\n        }\n      </ul>\n  )\n}","import React from 'react';\n\ninterface Props {\n  showModal: (value: boolean) => (void);\n}\n\nexport const Buttons: React.FC<Props> = ({ showModal }) => {\n  return (\n    <div className=\"modal__button-wrapper\">\n    <button \n      className=\"modal__cancel-button modal__button\"\n      onClick={() => showModal(false)}\n    >\n      Cancel\n    </button>\n    <button \n      className=\"modal__ok-button modal__button\"\n      onClick={() => showModal(false)}\n    >\n      OK\n    </button>\n  </div>\n  )\n}","export function setNumbers(n: number) {\n  const nums = [];\n  let i = 0;\n  while (i < n) {\n    i++;\n    nums.push(i)\n  }\n  console.log('function')\n  return nums;\n}","import React, { useMemo, useRef } from 'react';\nimport { ModalList } from './ModalList';\nimport { ModalLinks } from './ModalLinks';\nimport { Buttons } from './Buttons';\nimport { setNumbers } from '../../helpers/setNumbers';\n\ninterface Props {\n  showModal: (value: boolean) => (void);\n}\n\nexport const ModalWindow: React.FC<Props> = ({ showModal }) => {\n  const quantity = 50;\n  const numbers = useMemo(() => setNumbers(quantity), [quantity]);\n  const scrollableEl = useRef(null);\n\n  return (\n    <div className=\"modal\">\n      <ModalLinks numbers={numbers} scrollableEl={scrollableEl}/>\n      <ModalList numbers={numbers} scrollableEl={scrollableEl} />\n      <Buttons showModal={showModal} />\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { ModalWindow } from '../SmallComponents/ModalWindow';\n\nexport const First = () => {\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  \n  const showModal = (value: boolean) => {\n    setIsVisibleModal(value)\n  }\n  return (\n    <div className=\"first page\">\n      {\n        !isVisibleModal\n        ? (\n          <button className=\"first__button\" onClick={() => setIsVisibleModal(true)}>Open</button>\n        )\n        : (\n          <ModalWindow showModal={showModal} />\n        )\n      }\n    </div>\n  )\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSelectedList } from '../../store';\nimport { setSelectedItem, removeSelectedItem } from '../../store/selectedList';\n\ninterface Props {\n  number: number;\n}\n\nexport const TableItem: React.FC<Props> = ({ number }) => {\n  const activeList: number[] = useSelector(getSelectedList);\n  const isChecked = activeList.includes(number);\n  const dispatch = useDispatch();\n\n  const selectItem = (ev: any) => {\n    const value = ev.target.checked;\n    if (value) {\n      dispatch(setSelectedItem(number))\n    } else {\n      dispatch(removeSelectedItem(number))\n    }\n  }\n\n  return (\n    <tr>\n      <td>\n        <input \n          type=\"checkbox\"\n          checked={isChecked}\n          onChange={(ev) => selectItem(ev)}\n        />\n      </td>\n      <td>\n        {number}\n      </td>\n      <td>\n        Random Text number {number}\n      </td>\n    </tr>\n  )\n}","import React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setNumbers } from '../../helpers/setNumbers';\nimport { getSelectedList } from '../../store';\nimport { TableItem } from '../SmallComponents/TableItem';\nimport { cancelAll, selectAll } from '../../store/selectedList';\n\nexport const Second = () => {\n  const quantity = 2000;\n  const numbers = useMemo(() => setNumbers(quantity), [quantity]);\n  const activeList: number[] = useSelector(getSelectedList);\n  const isChecked = activeList.length === quantity;\n  const dispatch = useDispatch();\n\n  const handleSelect = (ev: any) => {\n    const value = ev.target.checked;\n    if (value) {\n      dispatch(selectAll(numbers))\n    } else {\n      dispatch(cancelAll())\n    }\n  }\n\n  return (\n    <div className=\"second page\">\n      <div className=\"second__wrapper\">\n        <table className=\"second__table\">\n          <thead className=\"second__table--head\">\n            <tr>\n              <th className=\"second__column-name\">\n                <input \n                  id=\"select__all\" \n                  type=\"checkbox\" \n                  className=\"second__select-all\"\n                  checked={isChecked}\n                  onChange={(ev) => handleSelect(ev)}\n                />\n              </th>\n              <th>Id</th>\n              <th>Text</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              numbers.map(number => <TableItem key={Date.now() + number} number={number} />)\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nexport const UsersList = () => {\n  return (\n    <h1>UsersList</h1>\n  )\n}","import React, { useState } from 'react';\nimport { addFormValidation } from '../../helpers/formValidation';\n\nexport const AddForm = () => {\n  const [email, setMail] = useState('');\n  const [surname, setSurname] = useState('');\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [inputErrors, setInputErrors] = useState({\n    name: '',\n    email: '',\n    surname: '',\n    phone: ''\n  })\n\n  const validateForm = () => {\n    const errors = addFormValidation(phone, surname, name, email);\n    const withoutErrors = Object.values(errors).every(value => value === '');\n    if (withoutErrors) {\n      console.log('okay');\n      \n    } else {\n      setInputErrors(errors);\n    }\n  }\n  \n  return (\n    <>\n      <form className=\"add-form\">\n        <input \n          className=\"add-form__input\"\n          type=\"text\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={(ev) => {\n            setName(ev.target.value);\n            setInputErrors({...inputErrors, name: ''})\n          }}\n        />\n        <div className=\"input__error\">{inputErrors.name}</div>\n        <input \n          className=\"add-form__input\"\n          type=\"text\"\n          placeholder=\"Surname\"\n          value={surname}\n          onChange={(ev) => {\n            setSurname(ev.target.value)\n            setInputErrors({...inputErrors, surname: ''})\n          }}\n        />\n        <div className=\"input__error\">{inputErrors.surname}</div>\n\n        <span>\n          <span>\n            <input \n              className=\"add-form__input\"\n              type=\"tel\"\n              placeholder=\"+38xxxxxxxxxx\"\n              value={phone}\n              onChange={(ev) => {\n                setPhone(ev.target.value)\n                setInputErrors({...inputErrors, phone: ''})\n              }}\n            />\n            <div className=\"input__error\">{inputErrors.phone}</div>\n          </span>\n          <span>\n            <input \n              className=\"add-form__input\"\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(ev) => {\n                setInputErrors({...inputErrors, email: ''})\n                setMail(ev.target.value)\n              }}\n            />\n            <div className=\"input__error\">{inputErrors.email}</div>\n          </span>\n        </span>\n      </form>\n        <button \n        type='button'\n        className=\"add-form__button\"\n        onClick={validateForm}\n      >\n        Submit\n      </button>\n    </>\n  )\n}","import React, { useState } from 'react';\nimport { UsersList } from '../SmallComponents/UsersList';\nimport { AddForm } from '../SmallComponents/AddForm';\n\nexport const Third = () => {\n  const [activeSection, setActiveSection] = useState('Add');\n\n  const defineComponent = () => {\n    switch(activeSection) {\n      case 'Add':\n        return <AddForm />;\n      case 'List': \n        return <UsersList />\n      default:\n        return <AddForm />;\n    }\n\n  }\n\n  const content = defineComponent();\n\n  return (\n    <div className=\"third page\">\n      <div className=\"third__wrapper\">\n        <button \n          className=\"third__tab\"\n          onClick={() => setActiveSection('Add')}\n        >\n          Add\n        </button>\n        <button \n          className=\"third__tab\"\n          onClick={() => setActiveSection('List')}\n        >\n          List\n        </button>\n      </div>\n      {content}\n    </div>\n  )\n}","import React, { useEffect } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { MainPage } from './components/MainPage';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { EnterForm } from './components/EnterForm';\nimport { RegisterForm } from './components/RegisterForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRegisteredUser } from './store/registeredUser';\nimport { setAuthorization } from './store/autorizes';\nimport { getAuthorization } from './store/index';\nimport { LeftNav } from './components/Navigation/LeftNav'\nimport { First } from './components/Pages/First';\nimport { Second } from './components/Pages/Second';\nimport { Third } from './components/Pages/Third';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isLogged = useSelector(getAuthorization);\n  useEffect(() => {\n    const name = localStorage.getItem('user');\n    if (name) {\n      dispatch(setRegisteredUser(name));\n      dispatch(setAuthorization(true));\n    }\n  });\n\n  return (\n      <div className=\"App\">\n        <Navigation />\n        {\n          isLogged && <LeftNav />\n        }\n        <Switch>\n          <Route path=\"/\" exact component={MainPage} />\n          <Route path=\"/home\"><Redirect to=\"/\" /></Route>\n          <Route path=\"/page1\" exact component={First} />\n          <Route path=\"/page2\" exact component={Second} />\n          <Route path=\"/page3\" exact component={Third} />\n          <Route path=\"/enter\" exact component={EnterForm} />\n          <Route path=\"/register\" exact component={RegisterForm} />\n        </Switch>\n      </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}