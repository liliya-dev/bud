{"version":3,"sources":["components/MainPage.tsx","components/Navigation/Login.tsx","components/Navigation/Logout.tsx","components/Navigation/Navigation.tsx","helpers/constants.ts","components/EnterForm.tsx","components/Navigation/LeftNav.tsx","components/SmallComponents/ModalItem.tsx","components/SmallComponents/ModalList.tsx","components/SmallComponents/ModalLinks.tsx","components/SmallComponents/Buttons.tsx","helpers/setNumbers.tsx","components/SmallComponents/ModalWindow.tsx","components/Pages/First.tsx","components/SmallComponents/TableItem.tsx","components/Pages/Second.tsx","components/SmallComponents/UserItem.tsx","components/SmallComponents/UsersList.tsx","components/SmallComponents/UsersPage.tsx","helpers/formValidation.ts","components/SmallComponents/AddForm.tsx","components/Pages/Third.tsx","helpers/handleEdit.ts","App.tsx","index.tsx"],"names":["MainPage","Login","className","to","exact","Logout","name","handleLogin","history","useHistory","handleLogout","a","localStorage","removeItem","push","onClick","Navigation","isAuthorized","onlyUser","zeroState","email","surname","phone","additionalPhone","additionalMail","isPhoneVisible","isMailVisible","id","EnterForm","useState","mail","setMail","password","setPassword","err","setErr","handleEnter","setItem","type","placeholder","value","onChange","ev","target","LeftNav","ModalItem","number","isActive","activeList","includes","ModalList","numbers","scrollableEl","ref","map","key","Date","now","ModalLinks","index","container","scrollTop","scrollTo","current","Buttons","showModal","setNumbers","n","console","log","nums","i","ModalWindow","React","memo","useMemo","useRef","First","isVisibleModal","setIsVisibleModal","TableItem","isChecked","setSelectedItem","removeSelectedItem","checked","selectItem","Second","setAll","cancelAll","length","handleSelect","UserItem","user","deleteTemp","startEditing","db","window","openDatabase","isConfirmed","confirm","transaction","tx","executeSql","UsersList","users","UsersPage","setUsers","search","setSearch","useEffect","results","usersFromDataBase","rows","preparedUsers","Object","values","filter","regMail","regPhone","AddForm","initialStates","isEdit","finishEditing","setSurname","setName","setPhone","setAdditionalPhone","setAdditionalMail","isVisiblePhone","setIsVisiblePhone","isVisibleMail","setIsVisibleMail","inputErrors","setInputErrors","errors","isPhone","isMail","additionalEmail","trim","test","addFormValidation","every","phones","emails","Third","activeSection","setActiveSection","setIsEdit","setInitialStates","newStates","split","secondPhone","secondMail","handleEditing","alert","content","defineComponent","App","isLogged","setIsLogged","userName","setUserName","setActiveList","list","num","getItem","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8d79b14f.chunk.js","sourcesContent":["import React from 'react';\n\nexport const MainPage: React.FC = () => {\n  return (\n    <>\n      <p>Enter or register please</p>\n    </>\n  )\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Login = () => {\n  return (\n    <span className=\"navigation__wrapper\">\n    <li className=\"navigation__item\">\n      <NavLink  className=\"navigation__link\" to=\"/enter/\" exact>\n        <p className=\"navigation__text\">\n          Enter\n        </p>\n      </NavLink>\n    </li>\n    {/* <li className=\"navigation__item\">\n      <NavLink className=\"navigation__link\" to=\"/register/\" exact>\n        <p className=\"navigation__text\">\n          Register\n        </p>\n      </NavLink>\n    </li> */}\n  </span>\n  )\n}","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\n\ninterface Props {\n  name: string;\n  handleLogin: (value: boolean) => (void);\n}\n\nexport const Logout: React.FC<Props> = ({ name, handleLogin }) => {\n  const history = useHistory();\n  const handleLogout = async () => {\n    handleLogin(false);\n    localStorage.removeItem('user');\n    history.push('/');\n  }\n\n  return (\n    <span className=\"navigation__wrapper\">\n    <li className=\"navigation__item\">\n      <button onClick={handleLogout} className=\"navigation__button\">\n          Logout\n      </button>\n    </li>\n    <li className=\"navigation__item\">\n        <p className=\"navigation__text\">\n          {name}\n        </p>\n    </li>\n  </span>\n  )\n}","import React from 'react';\n// import { useSelector } from 'react-redux';\n// import { getAuthorization } from '../../store';\nimport { Login } from './Login';\nimport { Logout } from './Logout';\n\ninterface Props {\n  isAuthorized: boolean;\n  name: string;\n  handleLogin: (value: boolean) => (void);\n}\n\nexport const Navigation: React.FC<Props> = ({ isAuthorized, name, handleLogin }) => {\n  // const isAuthorized = useSelector(getAuthorization);\n\n  return (\n    <ul className=\"navigation\">   \n      {\n        !isAuthorized \n          ? <Login/>\n          : <Logout handleLogin={handleLogin} name={name} />\n      }\n    </ul>\n  )\n}","export const onlyUser = {\n  email: 'admin@admin.net',\n  password: 'admin',\n}\n\nexport const zeroState = {\n  name: '',\n  email: '',\n  surname: '',\n  phone: '',\n  additionalPhone: '',\n  additionalMail: '',\n  isPhoneVisible: false,\n  isMailVisible: false,\n  id: '',\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { onlyUser } from '../helpers/constants';\n\ninterface Props {\n  handleLogin: (value: boolean) => (void);\n}\n\nexport const EnterForm: React.FC<Props> = ({ handleLogin }) => {\n  const [mail, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const [err, setErr] = useState('');\n  const history = useHistory();\n\n  const handleEnter = async () => {\n    if (mail !== onlyUser.email || password !== onlyUser.password) {\n      setErr('Check your mail and password')\n    } else {\n      localStorage.setItem('user', mail);\n      handleLogin(true);\n      history.push('/page1');\n    }\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <form className=\"form\">\n        <p>{err}</p>\n        <input \n          className=\"form__input\" \n          type=\"email\" \n          placeholder='email' \n          name=\"email\" \n          value={mail} \n          onChange={(ev) => {\n            setMail(ev.target.value);\n            setErr('');\n          }}\n        />\n        <p className=\"form__error\"></p>\n        <input \n          className=\"form__input\" \n          type=\"password\" \n          placeholder=\"password\" \n          value={password} \n          onChange={(ev) => {\n            setPassword(ev.target.value);\n            setErr('');\n          }}\n        />\n        <p className=\"form__error\"></p>\n        <button \n          className=\"form__button\"\n          type='button' \n          onClick={handleEnter}\n        >\n          Enter\n        </button>\n      </form>\n    </div>\n  )\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const LeftNav = () => {\n  return (\n    <ul className=\"left-nav\">\n      <li className=\"left-nav__item\">\n        <NavLink to='/page1' className='left-nav__link'>Страница 1</NavLink>\n      </li>\n      <li className=\"left-nav__item\">\n        <NavLink to='/page2' className='left-nav__link'>Страница 2</NavLink>\n      </li>\n      <li className=\"left-nav__item\">\n        <NavLink to='/page3' className='left-nav__link'>Страница 3</NavLink>\n      </li>\n    </ul>\n  )\n}","import React from 'react';\n\ninterface Props {\n  number: number;\n  activeList: number[];\n}\n\nexport const ModalItem: React.FC<Props> = ({ number, activeList }) => {\n  const isActive = activeList.includes(number);\n  return (\n    <li \n      className={!isActive ? \"options__item\" : \"options__item options__active-item\"} \n    >\n      <p className=\"options__text\">\n        {number}.\n      </p>\n      <p className=\"options__text\">\n        Text\n        &nbsp;\n        {number}\n      </p>\n    </li>\n  )\n}","import React from 'react';\nimport { ModalItem } from './ModalItem';\n\ninterface Props {\n  numbers: number[];\n  scrollableEl: any;\n  activeList: number[];\n}\n\nexport const ModalList: React.FC<Props> = ({ numbers, scrollableEl, activeList }) => {\n  return (\n    <ul className=\"options\" ref={scrollableEl}>\n    {\n      numbers.map((number) => <ModalItem activeList={activeList} number={number} key={Date.now() + number}/>)\n    }\n  </ul>\n  )\n}","import React from 'react';\n\ninterface Props {\n  numbers: number[];\n  scrollableEl: any;\n  activeList: number[];\n}\n\nfunction scrollTo(index: number, container: any) {\n  container.scrollTop = index * 55;\n}\n\nexport const ModalLinks: React.FC<Props> = ({ numbers, scrollableEl, activeList }) => {\n   \n  return (\n    <ul className=\"modal__pages\">\n        {\n          numbers.map((number, index) => {\n            return (\n              <li className=\"modal__item\" key={Date.now() + number}>\n                <button \n                  className={\n                    activeList.includes(number) \n                    ? \"modal__page-button--active\" \n                    : \"modal__page-button\" \n                  } \n                  onClick={() => scrollTo(index, scrollableEl.current)}\n                >\n                  {number}\n                </button>\n              </li>\n            )\n          })\n        }\n      </ul>\n  )\n}","import React from 'react';\n\ninterface Props {\n  showModal: (value: boolean) => (void);\n}\n\nexport const Buttons: React.FC<Props> = ({ showModal }) => {\n  return (\n    <div className=\"modal__button-wrapper\">\n    <button \n      className=\"modal__cancel-button modal__button\"\n      onClick={() => showModal(false)}\n    >\n      Cancel\n    </button>\n    <button \n      className=\"modal__ok-button modal__button\"\n      onClick={() => showModal(false)}\n    >\n      OK\n    </button>\n  </div>\n  )\n}","export function setNumbers(n: number) {\n  console.log('second num')\n  const nums = [];\n  let i = 0;\n  while (i < n) {\n    i++;\n    nums.push(i)\n  }\n  return nums;\n}","import React, { useMemo, useRef } from 'react';\nimport { ModalList } from './ModalList';\nimport { ModalLinks } from './ModalLinks';\nimport { Buttons } from './Buttons';\nimport { setNumbers } from '../../helpers/setNumbers';\n\ninterface Props {\n  showModal: (value: boolean) => (void);\n  activeList: number[];\n}\n\nconst Modal: React.FC<Props> = ({ showModal, activeList }) => {\n  const quantity = 50;\n  const numbers = useMemo(() => setNumbers(quantity), [quantity]);\n  const scrollableEl = useRef(null);\n\n  return (\n    <div className=\"modal\">\n      <ModalLinks numbers={numbers} activeList={activeList} scrollableEl={scrollableEl}/>\n      <ModalList numbers={numbers} activeList={activeList} scrollableEl={scrollableEl} />\n      <Buttons showModal={showModal} />\n    </div>\n  )\n}\n\nexport const ModalWindow = React.memo(Modal);","import React, { useState } from 'react';\nimport { ModalWindow } from '../SmallComponents/ModalWindow';\n\ninterface Props {\n  activeList: number[];\n}\n\nexport const First: React.FC<Props> = ({ activeList }) => {\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  \n  const showModal = (value: boolean) => {\n    setIsVisibleModal(value)\n  }\n  return (\n    <div className=\"first page\">\n      {\n        !isVisibleModal\n        ? (\n          <button className=\"first__button\" onClick={() => setIsVisibleModal(true)}>Open</button>\n        )\n        : (\n          <ModalWindow activeList={activeList} showModal={showModal} />\n        )\n      }\n    </div>\n  )\n}","import React from 'react';\n\ninterface Props {\n  number: number;\n  isChecked: boolean;\n  removeSelectedItem: (number: number) => (void);\n  setSelectedItem: (number: number) => (void);\n}\n\nconst TableItemWithoutMemo: React.FC<Props> = ({ \n  number, isChecked, setSelectedItem, removeSelectedItem \n}) => {\n  const selectItem = (ev: any) => {\n    const value = ev.target.checked;\n    if (value) {\n      setSelectedItem(number)\n    } else {\n      removeSelectedItem(number)\n    }\n  }\n\n  return (\n    <tr>\n      <td>\n        <input \n          type=\"checkbox\"\n          checked={isChecked}\n          onChange={(ev) => selectItem(ev)}\n        />\n      </td>\n      <td>\n        {number}\n      </td>\n      <td>\n        Random Text number {number}\n      </td>\n    </tr>\n  )\n}\n\nexport const TableItem = React.memo(TableItemWithoutMemo);","import React, { useMemo } from 'react';\nimport { setNumbers } from '../../helpers/setNumbers';\nimport { TableItem } from '../SmallComponents/TableItem';\n\ninterface Props {\n  setAll: (list: number[]) => (void);\n  cancelAll: () => (void);\n  activeList: number[];\n  removeSelectedItem: (number: number) => (void);\n  setSelectedItem: (number: number) => (void);\n}\n\nconst SecondWithoutMemo: React.FC<Props> = ({ \n  setAll, cancelAll, activeList, removeSelectedItem, setSelectedItem \n}) => {\n  const quantity = 2000;\n  const numbers = useMemo(() => setNumbers(quantity), [quantity]);\n  const isChecked = activeList.length === quantity;\n\n  const handleSelect = (ev: any) => {\n    const value = ev.target.checked;\n    if (value) {\n      setAll(numbers)\n    } else {\n      cancelAll()\n    }\n  }\n\n  return (\n    <div className=\"second page\">\n      <div className=\"second__wrapper\">\n        <table className=\"second__table\">\n          <thead className=\"second__table--head\">\n            <tr>\n              <th className=\"second__column-name\">\n                <input \n                  id=\"select__all\" \n                  type=\"checkbox\" \n                  className=\"second__select-all\"\n                  checked={isChecked}\n                  onChange={(ev) => handleSelect(ev)}\n                />\n              </th>\n              <th>Id</th>\n              <th>Text</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              numbers.map(number => (\n                <TableItem \n                  key={number} \n                  number={number} \n                  isChecked={activeList.includes(number)}\n                  setSelectedItem={setSelectedItem}\n                  removeSelectedItem={removeSelectedItem}\n                />\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\nexport const Second = React.memo(SecondWithoutMemo);","/* eslint-disable no-restricted-globals */\nimport React from 'react';\nimport { User } from '../../interfaces';\n\ninterface Props {\n  user: User;\n  deleteTemp: (id: string) => (void);\n  startEditing: (user: User) => void;\n}\n\nexport const UserItem: React.FC<Props> = ({ user, deleteTemp, startEditing }) => {\n  const handleDelete = () => {\n    let db = window.openDatabase(\"users\", \"1.0\", \"Test DB\", 1000000);\n    let isConfirmed = confirm(`Do you really want to delete ${user.name} ${user.surname}?`)\n    if (db && isConfirmed) {\n      db.transaction(function (tx) { \n        tx.executeSql(`DELETE FROM UserData WHERE id=${user.id}`); \n     });\n     deleteTemp(user.id);\n    }\n  };\n\n  return (\n    <tr>\n      <td>\n        {user.name}\n        &nbsp;\n        {user.surname}\n      </td>\n      <td>\n        {user.phone}\n      </td>\n      <td>\n        <button \n          className=\"users__action\"\n          onClick={handleDelete}\n        >\n          &#128465;\n        </button>\n        <button \n          className=\"users__action\"\n          onClick={() => startEditing(user)}\n        >\n          &#9997;\n        </button>\n      </td>\n    </tr>\n  )\n}","import React from 'react';\nimport { User } from '../../interfaces';\nimport { UserItem } from './UserItem';\n\ninterface Props {\n  users: User[];\n  deleteTemp: (id: string) => (void);\n  startEditing: (user: User) => void;\n}\n\nexport const UsersList: React.FC<Props> = ({ users, deleteTemp, startEditing }) => {\n  return (\n    <table className=\"second__table\">\n      <thead className=\"second__table--head\">\n        <tr>\n          <th className=\"second__column-name\">\n            Full Name\n          </th>\n          <th>Phone</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          users.map(user => (\n            <UserItem \n              startEditing={startEditing}\n              deleteTemp={deleteTemp} \n              key={user.id} \n              user={user} \n            />\n          )\n         )\n        }\n      </tbody>\n    </table>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { User } from '../../interfaces';\nimport { UsersList } from './UsersList';\n\ninterface Props {\n  startEditing: (user: User) => (void)\n}\n\nexport const UsersPage: React.FC<Props> = ({ startEditing }) => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    var db = window.openDatabase(\"users\", \"1.0\", \"Test DB\", 1000000);\n    if (db) {\n      db.transaction(function (tx) { \n        return tx.executeSql('SELECT * FROM UserData', [], function (tx, results) {\n          if(results) {\n            const usersFromDataBase = results.rows;\n            const preparedUsers: User[] = Object.values(usersFromDataBase);\n            setUsers(preparedUsers);\n          }\n        }); \n     });\n    }\n  }, []);\n\n  const deleteTemp = (id: string) => {\n    setUsers(users.filter(user => user.id !== id))\n  }\n\n  return (\n    <div className=\"users\">\n      <input \n        type=\"text\"\n        placeholder=\"&#128270; Search\"\n        value={search}\n        className=\"users__search\"\n        onChange={(ev: any) => setSearch(ev.target.value)}\n      />\n      {\n        users.length > 0 && (\n          <UsersList \n            startEditing={startEditing}\n            users={users.filter(user => (user.name + user.surname).includes(search))}\n            deleteTemp={deleteTemp}\n          />\n        )\n      }\n    </div>\n  )\n}","const regMail = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,6}\\b/;\nconst regPhone = /^\\+[0-9]{12}\\b/;\n\nexport const formValidation = (password: string, confirmedPassword: string, name: string, email: string) => {\n  const errors = {\n    name: '',\n    email: '',\n    password: '',\n    confirmedPassword: '',\n  }\n\n  if (!(name.trim()).length) {\n    errors.name = 'Enter the correct name please'\n  }\n  if (!regMail.test(email)) {\n    errors.email = 'Enter the correct email please'\n  }\n  if (password !== confirmedPassword) {\n    errors.confirmedPassword = 'Check your password please'\n  }\n  if (password.length < 5) {\n    errors.password = 'Password should be at least 6 characters'\n  }\n\n  return errors;\n}\n\nexport const addFormValidation = (\n  phone: string, surname: string, name: string, email: string, \n  isPhone: boolean, isMail: boolean, additionalPhone: string,\n  additionalEmail: string\n) => {\n  const errors = {\n    name: '',\n    email: '',\n    surname: '',\n    phone: '',\n    additionalPhone: '',\n    additionalMail: '',\n  }\n\n  if (!(name.trim()).length) {\n    errors.name = 'Enter the correct name please'\n  }\n\n  if (!(surname.trim()).length) {\n    errors.surname = 'Enter the correct surname please'\n  }\n\n  if (!regMail.test(email)) {\n    errors.email = 'Enter the correct email please'\n  }\n\n  if (!regPhone.test(phone)) {\n    errors.phone = 'Enter the correct phone please'\n  }\n\n  if (isPhone && !regPhone.test(additionalPhone)) {\n    errors.additionalPhone = 'Enter the correct phone please'\n  }\n\n  if (isMail && !regMail.test(additionalEmail)) {\n    errors.additionalMail = 'Enter the correct email please'\n  }\n\n  return errors;\n}","import React, { useState } from 'react';\nimport { addFormValidation } from '../../helpers/formValidation';\nimport { InitialState } from '../../interfaces';\n\ninterface Props {\n  initialStates: InitialState;\n  isEdit: boolean;\n  finishEditing: () => (void);\n}\n\nexport const AddForm: React.FC<Props> = ({ initialStates, isEdit, finishEditing }) => {\n  const [email, setMail] = useState(initialStates.email);\n  const [surname, setSurname] = useState(initialStates.surname);\n  const [name, setName] = useState(initialStates.name);\n  const [phone, setPhone] = useState(initialStates.phone);\n  const [additionalPhone, setAdditionalPhone] = useState(initialStates.additionalPhone);\n  const [additionalMail, setAdditionalMail] = useState(initialStates.additionalMail);\n  const [isVisiblePhone, setIsVisiblePhone] = useState(initialStates.isPhoneVisible);\n  const [isVisibleMail, setIsVisibleMail] = useState(initialStates.isMailVisible);\n  const [inputErrors, setInputErrors] = useState({\n    name: '',\n    email: '',\n    surname: '',\n    phone: '',\n    additionalPhone: '',\n    additionalMail: '',\n  });\n\n  const validateForm = () => {\n    const errors = addFormValidation(\n      phone, surname, name, email, isVisiblePhone, isVisibleMail, additionalPhone, additionalMail\n    );\n    const withoutErrors = Object.values(errors).every(value => value === '');\n    if (withoutErrors) {\n      let db = window.openDatabase(\"users\", \"1.0\", \"Test DB\", 1000000);\n      const phones = additionalPhone.length ? `${phone}  ${additionalPhone}` : phone;\n      const emails = additionalMail.length ? `${email}  ${additionalMail}` : email;\n      if (db) {\n        if (!isEdit) {\n          db.transaction(function (tx) { \n            tx.executeSql(`INSERT INTO UserData (id, name, surname, phone, email) \n            VALUES (${Date.now()}, \"${name}\", \"${surname}\", \"${phones}\", \"${emails}\" )`); \n          });\n          setMail('');\n          setName('');\n          setPhone('');\n          setSurname('');\n          setAdditionalMail('');\n          setAdditionalPhone('');\n          setIsVisibleMail(false);\n          setIsVisiblePhone(false);\n        }\n        else {\n          db.transaction(function (tx) { \n            console.log('start')\n            tx.executeSql(`UPDATE UserData SET name=\"${name}\", surname=\"${surname}\", phone=\"${phones}\", \n            email=\"${emails}\"\n            WHERE id = ${initialStates.id};`); \n          });\n          finishEditing();\n        }\n      } \n    } else {\n      setInputErrors(errors);\n    }\n  }\n  \n  return (\n    <>\n      <form className=\"add-form\">\n        <input \n          className=\"add-form__input\"\n          type=\"text\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={(ev) => {\n            setName(ev.target.value);\n            setInputErrors({...inputErrors, name: ''})\n          }}\n        />\n        <div className=\"input__error\">{inputErrors.name}</div>\n        <input \n          className=\"add-form__input\"\n          type=\"text\"\n          placeholder=\"Surname\"\n          value={surname}\n          onChange={(ev) => {\n            setSurname(ev.target.value)\n            setInputErrors({...inputErrors, surname: ''})\n          }}\n        />\n        <div className=\"input__error\">{inputErrors.surname}</div>\n\n        <span>\n          <span>\n            <div className=\"add-form__container\">\n              <input \n                className=\"add-form__input\"\n                type=\"tel\"\n                placeholder=\"+38xxxxxxxxxx\"\n                value={phone}\n                onChange={(ev) => {\n                  setPhone(ev.target.value)\n                  setInputErrors({...inputErrors, phone: ''})\n                }}\n              />\n              {\n                !isVisiblePhone &&(\n                  <button \n                    className=\"add-form__add\" \n                    onClick={() => setIsVisiblePhone(true)}\n                  >\n                    +\n                  </button>   \n                )\n              }\n            </div>\n            <div className=\"input__error\">{inputErrors.phone}</div>\n          </span>\n            {\n              isVisiblePhone && (\n                <>\n                  <input \n                  className=\"add-form__input\"\n                  type=\"tel\"\n                  placeholder=\"+38xxxxxxxxxx\"\n                  value={additionalPhone}\n                  onChange={(ev) => {\n                    setAdditionalPhone(ev.target.value)\n                    setInputErrors({...inputErrors, additionalPhone: ''})\n                  }}\n                />\n                  <div className=\"input__error\">{inputErrors.additionalPhone}</div>\n                </>\n              )\n\n            }\n          <span>\n            <div className=\"add-form__container\">\n              <input \n                className=\"add-form__input\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(ev) => {\n                  setInputErrors({...inputErrors, email: ''})\n                  setMail(ev.target.value)\n                }}\n              />\n              {\n                !isVisibleMail && (\n                  <button \n                    className=\"add-form__add\" \n                    onClick={() => setIsVisibleMail(true)}\n                  >\n                    +\n                  </button>   \n                )\n              }\n            </div>\n            <div className=\"input__error\">{inputErrors.email}</div>\n            </span>\n            {\n              isVisibleMail && (\n                <>\n                  <input \n                  className=\"add-form__input\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={additionalMail}\n                  onChange={(ev) => {\n                    setInputErrors({...inputErrors, additionalMail: ''})\n                    setAdditionalMail(ev.target.value)\n                  }}\n                />\n                  <div className=\"input__error\">{inputErrors.additionalMail}</div>\n                </>\n              )\n            }\n          <span>\n          </span>\n        </span>\n      </form>\n      <div className=\"add-form__button-wrapper\">\n        <button \n          type='button'\n          className=\"add-form__button\"\n          onClick={validateForm}\n        >\n          Submit\n        </button>\n        {\n          isEdit && (\n            <button \n              type='button'\n              className=\"add-form__button\"\n              onClick={finishEditing}\n            >\n              Cancel\n            </button>\n          )\n        }\n      </div>\n    </>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { UsersPage } from '../SmallComponents/UsersPage';\nimport { AddForm } from '../SmallComponents/AddForm';\nimport { User } from '../../interfaces';\nimport { zeroState } from '../../helpers/constants';\nimport { handleEditing } from '../../helpers/handleEdit';\n\nexport const Third = () => {\n  const [activeSection, setActiveSection] = useState('List');\n  const [isEdit, setIsEdit] = useState(false);\n  const [initialStates, setInitialStates] = useState(zeroState);\n\n  const startEditing = (user: User) => {\n    setActiveSection('Add');\n    setIsEdit(true);\n    const newStates = handleEditing(user);\n    setInitialStates(newStates)\n  }\n\n  const finishEditing = () => {\n    setInitialStates(zeroState);\n    setActiveSection('List');\n    setIsEdit(false);\n  }\n\n  const defineComponent = () => {\n    switch(activeSection) {\n      case 'Add':\n        return <AddForm initialStates={initialStates} isEdit={isEdit} finishEditing={finishEditing}/>;\n      case 'List': \n        return <UsersPage startEditing={startEditing}/>\n      default:\n        return <AddForm initialStates={initialStates} isEdit={isEdit} finishEditing={finishEditing}/>;\n    }\n  }\n\n  useEffect(() => {\n    var db = window.openDatabase(\"users\", \"1.0\", \"Test DB\", 1000000);\n    if (db) {\n      db.transaction(function (tx) {   \n        tx.executeSql('CREATE TABLE IF NOT EXISTS UserData (id, name, surname, phone, email)');\n     });\n    } else {\n      alert(\"Your browser doesn't support webSQL\")\n    }\n  }, [])\n  const content = defineComponent();\n\n  return (\n    <div className=\"third page\">\n      <div className=\"third__wrapper\">\n        <button \n          className={activeSection==='Add' ? \"third__tab third__tab--active\" : \"third__tab\"}\n          onClick={() => setActiveSection('Add')}\n        >\n          Add\n        </button>\n        <button \n          className={activeSection==='List' ? \"third__tab third__tab--active\" : \"third__tab\"}\n          onClick={() => setActiveSection('List')}\n        >\n          List\n        </button>\n      </div>\n      {content}\n    </div>\n  )\n}","import { User } from '../interfaces';\n\nexport const handleEditing = (user: User) => {\n  const phones = user.phone.split('  ');\n  const emails = user.email.split('  ');\n  const secondPhone = phones.length === 2 ? phones[1] : '';\n  const secondMail = emails.length === 2 ? emails[1] : '';\n  \n  const states = {\n    name: user.name,\n    surname: user.surname,\n    phone: phones[0],\n    additionalMail: secondMail,\n    additionalPhone: secondPhone,\n    email: emails[0],\n    isMailVisible: emails.length === 2,\n    isPhoneVisible: phones.length === 2,\n    id: user.id\n  }\n\n  return states;\n}","import React, { useEffect } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { MainPage } from './components/MainPage';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { EnterForm } from './components/EnterForm';\nimport { LeftNav } from './components/Navigation/LeftNav'\nimport { First } from './components/Pages/First';\nimport { Second } from './components/Pages/Second';\nimport { Third } from './components/Pages/Third';\nimport { useState } from 'react';\n\nfunction App() {\n  const [isLogged, setIsLogged] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [activeList, setActiveList] = useState<number[]>([]);\n\n  const setAll = (list: number[]) => {\n    setActiveList(list);\n  }\n\n  const cancelAll = () => {\n    setActiveList([]);\n  }\n\n  const setSelectedItem = (number: number) => {\n    setActiveList([...activeList, number]);\n  }\n\n  const removeSelectedItem = (number: number) => {\n    setActiveList(activeList.filter(num => num !== number));\n  }\n\n  useEffect(() => {\n    const name = localStorage.getItem('user');\n    if (name) {\n      setIsLogged(true);\n      setUserName(name);\n    }\n  }, [setIsLogged, setUserName]);\n\n  const handleLogin = (value: boolean) => {\n    setIsLogged(value);\n  }\n\n  return (\n      <div className=\"App\">\n        <Navigation handleLogin={handleLogin} isAuthorized={isLogged} name={userName} />\n        {\n          isLogged && <LeftNav />\n        }\n        <Switch>\n          <Route path=\"/\" exact component={MainPage} />\n          <Route path=\"/home\"><Redirect to=\"/\" /></Route>\n          <Route path=\"/page1\" exact render={() => <First activeList={activeList} />} />\n          <Route path=\"/page2\" exact render={() => \n            <Second \n              setAll={setAll} \n              cancelAll={cancelAll} \n              activeList={activeList}\n              setSelectedItem={setSelectedItem}\n              removeSelectedItem={removeSelectedItem}\n            />}  \n          />\n          <Route path=\"/page3\" exact component={Third} />\n          <Route path=\"/enter\" exact render={() => <EnterForm handleLogin={handleLogin} /> } />\n        </Switch>\n      </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}