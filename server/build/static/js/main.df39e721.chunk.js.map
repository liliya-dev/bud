{"version":3,"sources":["components/MainPage.tsx","store/autorizes.ts","store/registeredUser.ts","store/selectedList.tsx","store/index.ts","components/Navigation/Login.tsx","helpers/constants.ts","helpers/fetchData.ts","components/Navigation/Logout.tsx","components/Navigation/Navigation.tsx","components/EnterForm.tsx","components/RegisterForm.tsx","helpers/formValidation.ts","components/Navigation/LeftNav.tsx","components/SmallComponents/ModalItem.tsx","components/SmallComponents/ModalList.tsx","components/SmallComponents/ModalLinks.tsx","components/SmallComponents/Buttons.tsx","helpers/setNumbers.tsx","components/SmallComponents/ModalWindow.tsx","components/Pages/First.tsx","components/SmallComponents/TableItem.tsx","components/Pages/Second.tsx","components/SmallComponents/UserItem.tsx","components/SmallComponents/UsersList.tsx","components/SmallComponents/UsersPage.tsx","components/SmallComponents/AddForm.tsx","components/Pages/Third.tsx","App.tsx","index.tsx"],"names":["MainPage","setAuthorization","value","type","payload","reducer","action","setRegisteredUser","list","filter","item","rootReducer","combineReducers","authorization","authorizationReducer","registeredUser","registeredUserReducer","selectedList","selectedListReducer","getAuthorization","state","getRegisteredUser","getSelectedList","store","createStore","composeWithDevTools","applyMiddleware","thunk","Login","className","to","exact","baseUrl","checkToken","a","fetch","method","headers","Accept","credentials","response","json","fetchLogData","url","dataFromUser","body","JSON","stringify","data","fetchLogDataWithToken","token","console","log","Logout","userName","useSelector","history","useHistory","dispatch","useDispatch","handleLogout","localStorage","getItem","removeItem","push","onClick","Navigation","isAuthorized","EnterForm","useState","mail","setMail","password","setPassword","err","setErr","handleEnter","setItem","placeholder","name","onChange","ev","target","RegisterForm","email","confirmedPassword","setConfirmedPassword","setName","inputErrors","setInputErrors","tryToMakeRegistration","isRegistrationDone","errors","trim","length","includes","formValidation","Object","values","every","LeftNav","ModalItem","number","isActive","ModalList","numbers","scrollableEl","ref","map","key","Date","now","ModalLinks","activeList","index","container","scrollTop","scrollTo","current","Buttons","showModal","setNumbers","n","nums","i","ModalWindow","useMemo","useRef","First","isVisibleModal","setIsVisibleModal","TableItem","isChecked","checked","setSelectedItem","removeSelectedItem","selectItem","Second","id","handleSelect","UserItem","user","deleteTemp","startEditing","surname","phone","db","window","openDatabase","transaction","tx","executeSql","UsersList","users","UsersPage","setUsers","search","setSearch","useEffect","results","usersFromDataBase","rows","preparedUsers","AddForm","initialStates","isEdit","finishEditing","setSurname","setPhone","additionalPhone","setAdditionalPhone","additionalMail","setAdditionalMail","isPhoneVisible","isVisiblePhone","setIsVisiblePhone","isMailVisible","isVisibleMail","setIsVisibleMail","isPhone","isMail","additionalEmail","regMail","regPhone","test","addFormValidation","phones","emails","zeroState","Third","activeSection","setActiveSection","setIsEdit","setInitialStates","split","secondPhone","secondMail","content","defineComponent","App","isLogged","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df39e721.chunk.js","sourcesContent":["import React from 'react';\n\nexport const MainPage: React.FC = () => {\n  return (\n    <>\n      <p>Home Page is here</p>\n    </>\n  )\n}","import { AnyAction } from 'redux';\n\nconst SET_AUTHORIZATION = 'SET_AUTHORIZATION';\n\nexport const setAuthorization = (value: boolean) => ({ type: SET_AUTHORIZATION, payload: value });\n\nconst reducer = (value = false, action: AnyAction) => {\n  switch (action.type) {\n    case SET_AUTHORIZATION:\n      return action.payload;\n\n    default:\n      return value;\n  }\n};\n\nexport default reducer;","import { AnyAction } from 'redux';\n\nconst SET_REGISTERED_USER = 'SET_REGISTERED_USER';\n\nexport const setRegisteredUser = (value: string) => ({ type: SET_REGISTERED_USER, payload: value });\n\nconst reducer = (value = '', action: AnyAction) => {\n  switch (action.type) {\n    case SET_REGISTERED_USER:\n      return action.payload;\n\n    default:\n      return value;\n  }\n};\n\nexport default reducer;","import { AnyAction } from 'redux';\n\nconst SET_SELECTED_ITEM = 'SET_SELECTED_ITEM';\nconst REMOVE_SELECTED_ITEM = 'REMOVE_SELECTED_ITEM';\nconst SELECT_ALL= 'SELECT_ALL';\nconst CANCEL_ALL= 'CANCEL_ALL';\n\nexport const cancelAll = () => ({ type: CANCEL_ALL });\nexport const selectAll = (list: number[]) => ({ type: SELECT_ALL, payload: list });\nexport const setSelectedItem = (value: number) => ({ type: SET_SELECTED_ITEM, payload: value });\nexport const removeSelectedItem = (value: number) => ({ type: REMOVE_SELECTED_ITEM, payload: value });\n\nconst reducer = (list = [], action: AnyAction) => {\n  switch (action.type) {\n    case SET_SELECTED_ITEM:\n      return [...list, action.payload];\n    case REMOVE_SELECTED_ITEM:\n      return list.filter(item => item !== action.payload);\n    case SELECT_ALL:\n      return [...action.payload];\n    case CANCEL_ALL:\n      return [];\n    default:\n      return list;\n  }\n};\n\nexport default reducer;","import thunk from 'redux-thunk';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport authorizationReducer from './autorizes';\nimport registeredUserReducer from './registeredUser';\nimport selectedListReducer from './selectedList';\n\n\nconst rootReducer = combineReducers({\n  authorization: authorizationReducer,\n  registeredUser: registeredUserReducer,\n  selectedList: selectedListReducer,\n});\n\nexport const getAuthorization = (state: RootState) => state.authorization;\nexport const getRegisteredUser = (state: RootState) => state.registeredUser;\nexport const getSelectedList = (state: RootState) => state.selectedList;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Login = () => {\n  return (\n    <span className=\"navigation__wrapper\">\n    <li className=\"navigation__item\">\n      <NavLink  className=\"navigation__link\" to=\"/enter/\" exact>\n        <p className=\"navigation__text\">\n          Enter\n        </p>\n      </NavLink>\n    </li>\n    <li className=\"navigation__item\">\n      <NavLink className=\"navigation__link\" to=\"/register/\" exact>\n        <p className=\"navigation__text\">\n          Register\n        </p>\n      </NavLink>\n    </li>\n  </span>\n  )\n}","export const baseUrl = 'http://localhost:3002';\n\nexport const checkToken = async (value: string) => {\n  const response = await fetch(`http://localhost:3002/check`, \n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${value}`,\n        Accept: 'application/json',\n      },\n      credentials: 'include',\n    }\n  )\n  const data = await response.json();\n}\n","import { baseUrl } from './constants'; \nexport const fetchLogData = async (method: string, url: string, dataFromUser: any) => {\n  const response = await fetch(`${baseUrl}${url}`, \n    {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify(dataFromUser)\n    }\n  )\n  const data = await response.json();\n  return data;\n}\n\nexport const getData = async (url: string) => {\n  const response = await fetch(`${baseUrl}${url}`, \n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    }\n  )\n  const data = await response.json();\n  return data;\n}\n\nexport const fetchLogDataWithToken = async (method: string, url: string, dataFromUser: any, token: string | null) => {\n  console.log(`${baseUrl}${url}`)\n  const response = await fetch(`${baseUrl}${url}`, \n    {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n        Accept: 'application/json',\n      },\n      body: JSON.stringify(dataFromUser)\n    }\n  )\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchLogDataWithToken } from '../../helpers/fetchData';\nimport { getRegisteredUser } from '../../store';\nimport { setAuthorization } from '../../store/autorizes';\nimport { setRegisteredUser } from '../../store/registeredUser';\n\nexport const Logout = () => {\n  const userName = useSelector(getRegisteredUser);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const handleLogout = async () => {\n    await fetchLogDataWithToken('POST', '/logout', {}, localStorage.getItem('token'));\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch(setAuthorization(false));\n    dispatch(setRegisteredUser(''));\n    history.push('/');\n  }\n\n  return (\n    <span className=\"navigation__wrapper\">\n    <li className=\"navigation__item\">\n      <button onClick={handleLogout} className=\"navigation__button\">\n          Logout\n      </button>\n    </li>\n    <li className=\"navigation__item\">\n        <p className=\"navigation__text\">\n          {userName}\n        </p>\n    </li>\n  </span>\n  )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getAuthorization } from '../../store';\nimport { Login } from './Login';\nimport { Logout } from './Logout';\n\nexport const Navigation: React.FC = () => {\n  const isAuthorized = useSelector(getAuthorization);\n\n  return (\n    <ul className=\"navigation\">   \n      {\n        !isAuthorized \n          ? <Login/>\n          : <Logout />\n      }\n    </ul>\n  )\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { checkToken } from '../helpers/constants';\nimport { fetchLogData } from '../helpers/fetchData';\nimport { setAuthorization } from '../store/autorizes';\nimport { setRegisteredUser } from '../store/registeredUser';\n\nexport const EnterForm: React.FC = () => {\n  const [mail, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [err, setErr] = useState('');\n\n  const handleEnter = async () => {\n    console.log('')\n    const data = await fetchLogData('POST', '/enter', { mail, password })\n    if(data.token) {\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', data.userName);\n      dispatch(setAuthorization(true));\n      checkToken(data.token)\n      dispatch(setRegisteredUser(data.userName));\n      history.push('/page1');\n    } else {\n      console.log('else')\n      setErr('Check your mail and password')\n    }\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <form className=\"form\">\n        <p>{err}</p>\n        <input \n          className=\"form__input\" \n          type=\"email\" \n          placeholder='email' \n          name=\"email\" \n          value={mail} \n          onChange={(ev) => {\n            setMail(ev.target.value);\n            setErr('');\n          }}\n        />\n        <p className=\"form__error\"></p>\n        <input \n          className=\"form__input\" \n          type=\"password\" \n          placeholder=\"password\" \n          value={password} \n          onChange={(ev) => {\n            setPassword(ev.target.value);\n            setErr('');\n          }}\n        />\n        <p className=\"form__error\"></p>\n        <button className=\"form__button\"type='button' onClick={handleEnter}>Enter</button>\n      </form>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { formValidation } from '../helpers/formValidation';\nimport { fetchLogData } from '../helpers/fetchData';\ninterface Resp {\n  isRegistrationDone: boolean;\n  userName: string;\n}\n\nexport const RegisterForm: React.FC = () => {\n  const [email, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmedPassword, setConfirmedPassword] = useState('');\n  const [name, setName] = useState('');\n  const [inputErrors, setInputErrors] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmedPassword: ''\n  })\n\n  const history = useHistory();\n\n  const handleSubmit = () => {\n    const errors = formValidation(password, confirmedPassword, name, email);\n    const withoutErrors = Object.values(errors).every(value => value === '');\n    if (withoutErrors) {\n      tryToMakeRegistration();\n    } else {\n      setInputErrors(errors);\n    }\n  }\n\n  const tryToMakeRegistration = async () => {\n    const data = await fetchLogData('POST', '/register', { email, password, name });\n    if (data.isRegistrationDone) { \n        history.push('/enter');\n      }\n  \n  }\n\n  return (\n    <div className=\"wrapper\">\n      <form className=\"form\">\n        <input \n          className=\"form__input\" \n          type=\"text\" \n          placeholder=\"Name\" \n          value={name} \n          onChange={(ev) => {\n            setName(ev.target.value);\n            setInputErrors({...inputErrors, name: ''})\n          }}\n        />\n        <p className=\"form__error\">{inputErrors.name}</p>\n        <input \n          className=\"form__input\" \n          type=\"email\" \n          placeholder='Email'  \n          value={email} \n          onChange={(ev) => {\n            setMail(ev.target.value);\n            setInputErrors({...inputErrors, email: ''})\n          }}\n        />\n        <p className=\"form__error\">{inputErrors.email}</p>\n        <input \n          className=\"form__input\" \n          type=\"password\" \n          placeholder=\"Password\" \n          value={password} \n          onChange={(ev) => {\n            setPassword(ev.target.value);\n            setInputErrors({...inputErrors, password: '', confirmedPassword: ''})\n          }}\n        />\n        <p className=\"form__error\">{inputErrors.password}</p>\n        <input \n          className=\"form__input\" \n          type=\"password\" \n          placeholder=\"Confirm password\" \n          value={confirmedPassword} \n          onChange={(ev) => setConfirmedPassword(ev.target.value)}\n        />\n        <p className=\"form__error\">{inputErrors.confirmedPassword}</p>\n        <button className=\"form__button\" type='button' onClick={handleSubmit}>Register</button>\n      </form>\n    </div>\n  )\n}","export const formValidation = (password: string, confirmedPassword: string, name: string, email: string) => {\n  const errors = {\n    name: '',\n    email: '',\n    password: '',\n    confirmedPassword: '',\n  }\n\n  if (!(name.trim()).length) {\n    errors.name = 'Enter the correct name please'\n  }\n  if (!email.includes('@')) {\n    errors.email = 'Enter the correct email please'\n  }\n  if (password !== confirmedPassword) {\n    errors.confirmedPassword = 'Check your password please'\n  }\n  if (password.length < 7) {\n    errors.password = 'Password should be at least 6 characters'\n  }\n\n  return errors;\n}\n\nexport const addFormValidation = (\n  phone: string, surname: string, name: string, email: string, \n  isPhone: boolean, isMail: boolean, additionalPhone: string,\n  additionalEmail: string\n) => {\n  const errors = {\n    name: '',\n    email: '',\n    surname: '',\n    phone: '',\n    additionalPhone: '',\n    additionalMail: '',\n  }\n\n  const regMail = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,6}\\b/;\n  const regPhone = /^\\+[0-9]{12}\\b/;\n\n  if (!(name.trim()).length) {\n    errors.name = 'Enter the correct name please'\n  }\n\n  if (!(surname.trim()).length) {\n    errors.surname = 'Enter the correct surname please'\n  }\n\n  if (!regMail.test(email)) {\n    errors.email = 'Enter the correct email please'\n  }\n\n  if (!regPhone.test(phone)) {\n    errors.phone = 'Enter the correct phone please'\n  }\n\n  if (isPhone && !regPhone.test(additionalPhone)) {\n    errors.additionalPhone = 'Enter the correct phone please'\n  }\n\n  if (isMail && !regMail.test(additionalEmail)) {\n    errors.additionalMail = 'Enter the correct email please'\n  }\n\n  return errors;\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const LeftNav = () => {\n  return (\n    <ul className=\"left-nav\">\n      <li className=\"left-nav__item\">\n        <NavLink to='/page1' className='left-nav__link'>Страница 1</NavLink>\n      </li>\n      <li className=\"left-nav__item\">\n        <NavLink to='/page2' className='left-nav__link'>Страница 2</NavLink>\n      </li>\n      <li className=\"left-nav__item\">\n        <NavLink to='/page3' className='left-nav__link'>Страница 3</NavLink>\n      </li>\n    </ul>\n  )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getSelectedList } from '../../store/index';\n\ninterface Props {\n  number: number;\n}\n\nexport const ModalItem: React.FC<Props> = ({ number }) => {\n  const activeList: number[] = useSelector(getSelectedList);\n  const isActive = activeList.includes(number);\n  return (\n    <li \n      className={!isActive ? \"options__item\" : \"options__item options__active-item\"} \n    >\n      <p className=\"options__text\">\n        {number}.\n      </p>\n      <p className=\"options__text\">\n        Text\n        &nbsp;\n        {number}\n      </p>\n    </li>\n  )\n}","import React from 'react';\nimport { ModalItem } from './ModalItem';\n\ninterface Props {\n  numbers: number[];\n  scrollableEl: any;\n}\n\nexport const ModalList: React.FC<Props> = ({ numbers, scrollableEl }) => {\n  return (\n    <ul className=\"options\" ref={scrollableEl}>\n    {\n      numbers.map((number) => <ModalItem number={number} key={Date.now() + number}/>)\n    }\n  </ul>\n  )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getSelectedList } from '../../store';\n\ninterface Props {\n  numbers: number[];\n  scrollableEl: any;\n}\n\nfunction scrollTo(index: number, container: any) {\n  container.scrollTop = index * 55;\n}\n\nexport const ModalLinks: React.FC<Props> = ({ numbers, scrollableEl }) => {\n  const activeList: number[] = useSelector(getSelectedList);\n   \n  return (\n    <ul className=\"modal__pages\">\n        {\n          numbers.map((number, index) => {\n            return (\n              <li className=\"modal__item\" key={Date.now() + number}>\n                <button \n                  className={\n                    activeList.includes(number) \n                    ? \"modal__page-button--active\" \n                    : \"modal__page-button\" \n                  } \n                  onClick={() => scrollTo(index, scrollableEl.current)}\n                >\n                  {number}\n                </button>\n              </li>\n            )\n          })\n        }\n      </ul>\n  )\n}","import React from 'react';\n\ninterface Props {\n  showModal: (value: boolean) => (void);\n}\n\nexport const Buttons: React.FC<Props> = ({ showModal }) => {\n  return (\n    <div className=\"modal__button-wrapper\">\n    <button \n      className=\"modal__cancel-button modal__button\"\n      onClick={() => showModal(false)}\n    >\n      Cancel\n    </button>\n    <button \n      className=\"modal__ok-button modal__button\"\n      onClick={() => showModal(false)}\n    >\n      OK\n    </button>\n  </div>\n  )\n}","export function setNumbers(n: number) {\n  const nums = [];\n  let i = 0;\n  while (i < n) {\n    i++;\n    nums.push(i)\n  }\n  console.log('function')\n  return nums;\n}","import React, { useMemo, useRef } from 'react';\nimport { ModalList } from './ModalList';\nimport { ModalLinks } from './ModalLinks';\nimport { Buttons } from './Buttons';\nimport { setNumbers } from '../../helpers/setNumbers';\n\ninterface Props {\n  showModal: (value: boolean) => (void);\n}\n\nexport const ModalWindow: React.FC<Props> = ({ showModal }) => {\n  const quantity = 50;\n  const numbers = useMemo(() => setNumbers(quantity), [quantity]);\n  const scrollableEl = useRef(null);\n\n  return (\n    <div className=\"modal\">\n      <ModalLinks numbers={numbers} scrollableEl={scrollableEl}/>\n      <ModalList numbers={numbers} scrollableEl={scrollableEl} />\n      <Buttons showModal={showModal} />\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { ModalWindow } from '../SmallComponents/ModalWindow';\n\nexport const First = () => {\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  \n  const showModal = (value: boolean) => {\n    setIsVisibleModal(value)\n  }\n  return (\n    <div className=\"first page\">\n      {\n        !isVisibleModal\n        ? (\n          <button className=\"first__button\" onClick={() => setIsVisibleModal(true)}>Open</button>\n        )\n        : (\n          <ModalWindow showModal={showModal} />\n        )\n      }\n    </div>\n  )\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSelectedList } from '../../store';\nimport { setSelectedItem, removeSelectedItem } from '../../store/selectedList';\n\ninterface Props {\n  number: number;\n}\n\nexport const TableItem: React.FC<Props> = ({ number }) => {\n  const activeList: number[] = useSelector(getSelectedList);\n  const isChecked = activeList.includes(number);\n  const dispatch = useDispatch();\n\n  const selectItem = (ev: any) => {\n    const value = ev.target.checked;\n    if (value) {\n      dispatch(setSelectedItem(number))\n    } else {\n      dispatch(removeSelectedItem(number))\n    }\n  }\n\n  return (\n    <tr>\n      <td>\n        <input \n          type=\"checkbox\"\n          checked={isChecked}\n          onChange={(ev) => selectItem(ev)}\n        />\n      </td>\n      <td>\n        {number}\n      </td>\n      <td>\n        Random Text number {number}\n      </td>\n    </tr>\n  )\n}","import React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setNumbers } from '../../helpers/setNumbers';\nimport { getSelectedList } from '../../store';\nimport { TableItem } from '../SmallComponents/TableItem';\nimport { cancelAll, selectAll } from '../../store/selectedList';\n\nexport const Second = () => {\n  const quantity = 2000;\n  const numbers = useMemo(() => setNumbers(quantity), [quantity]);\n  const activeList: number[] = useSelector(getSelectedList);\n  const isChecked = activeList.length === quantity;\n  const dispatch = useDispatch();\n\n  const handleSelect = (ev: any) => {\n    const value = ev.target.checked;\n    if (value) {\n      dispatch(selectAll(numbers))\n    } else {\n      dispatch(cancelAll())\n    }\n  }\n\n  return (\n    <div className=\"second page\">\n      <div className=\"second__wrapper\">\n        <table className=\"second__table\">\n          <thead className=\"second__table--head\">\n            <tr>\n              <th className=\"second__column-name\">\n                <input \n                  id=\"select__all\" \n                  type=\"checkbox\" \n                  className=\"second__select-all\"\n                  checked={isChecked}\n                  onChange={(ev) => handleSelect(ev)}\n                />\n              </th>\n              <th>Id</th>\n              <th>Text</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              numbers.map(number => <TableItem key={Date.now() + number} number={number} />)\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { User } from '../../interfaces';\n\ninterface Props {\n  user: User;\n  deleteTemp: (id: string) => (void);\n  startEditing: (user: User) => void;\n}\n\nexport const UserItem: React.FC<Props> = ({ user, deleteTemp, startEditing }) => {\n  const handleDelete = () => {\n    let db = window.openDatabase(\"users\", \"1.0\", \"Test DB\", 1000000);\n    if (db) {\n      db.transaction(function (tx) { \n        tx.executeSql(`DELETE FROM UserData WHERE id=${user.id}`); \n     });\n     deleteTemp(user.id);\n    }\n  }\n  return (\n    <tr>\n      <td>\n        {user.name}\n        &nbsp;\n        {user.surname}\n      </td>\n      <td>\n        {user.phone}\n      </td>\n      <td>\n        <button \n          className=\"users__action\"\n          onClick={handleDelete}\n        >\n          &#128465;\n        </button>\n        <button \n          className=\"users__action\"\n          onClick={() => startEditing(user)}\n        >\n          &#9997;\n        </button>\n      </td>\n    </tr>\n  )\n}","import React from 'react';\nimport { User } from '../../interfaces';\nimport { UserItem } from './UserItem';\n\ninterface Props {\n  users: User[];\n  deleteTemp: (id: string) => (void);\n  startEditing: (user: User) => void;\n}\n\nexport const UsersList: React.FC<Props> = ({ users, deleteTemp, startEditing }) => {\n  return (\n    <table className=\"second__table\">\n      <thead className=\"second__table--head\">\n        <tr>\n          <th className=\"second__column-name\">\n            Full Name\n          </th>\n          <th>Phone</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          users.map(user => (\n            <UserItem \n              startEditing={startEditing}\n              deleteTemp={deleteTemp} \n              key={user.id} \n              user={user} \n            />\n          )\n         )\n        }\n      </tbody>\n    </table>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { User } from '../../interfaces';\nimport { UsersList } from './UsersList';\n\ninterface Props {\n  startEditing: (user: User) => (void)\n}\n\nexport const UsersPage: React.FC<Props> = ({ startEditing }) => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    console.log(';;;;;;;')\n    var db = window.openDatabase(\"users\", \"1.0\", \"Test DB\", 1000000);\n    if (db) {\n      db.transaction(function (tx) { \n        return tx.executeSql('SELECT * FROM UserData', [], function (tx, results) {\n          if(results) {\n            const usersFromDataBase = results.rows;\n            console.log(usersFromDataBase, 12345)\n            const preparedUsers: User[] = Object.values(usersFromDataBase);\n            setUsers(preparedUsers);\n          }\n        }); \n     });\n    }\n  }, []);\n\n  const deleteTemp = (id: string) => {\n    setUsers(users.filter(user => user.id !== id))\n  }\n\n  return (\n    <div className=\"users\">\n      <input \n        type=\"text\"\n        placeholder=\"&#128270; Search\"\n        value={search}\n        className=\"users__search\"\n        onChange={(ev: any) => setSearch(ev.target.value)}\n      />\n      {\n        users.length > 0 && (\n          <UsersList \n            startEditing={startEditing}\n            users={users.filter(user => (user.name + user.surname).includes(search))}\n            deleteTemp={deleteTemp}\n          />\n\n        )\n      }\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { addFormValidation } from '../../helpers/formValidation';\nimport { InitialState } from '../../interfaces';\n\ninterface Props {\n  initialStates: InitialState;\n  isEdit: boolean;\n  finishEditing: () => (void);\n}\n\nexport const AddForm: React.FC<Props> = ({ initialStates, isEdit, finishEditing }) => {\n  const [email, setMail] = useState(initialStates.email);\n  const [surname, setSurname] = useState(initialStates.surname);\n  const [name, setName] = useState(initialStates.name);\n  const [phone, setPhone] = useState(initialStates.phone);\n  const [additionalPhone, setAdditionalPhone] = useState(initialStates.additionalPhone);\n  const [additionalMail, setAdditionalMail] = useState(initialStates.additionalMail);\n  const [isVisiblePhone, setIsVisiblePhone] = useState(initialStates.isPhoneVisible);\n  const [isVisibleMail, setIsVisibleMail] = useState(initialStates.isMailVisible);\n  const [inputErrors, setInputErrors] = useState({\n    name: '',\n    email: '',\n    surname: '',\n    phone: '',\n    additionalPhone: '',\n    additionalMail: '',\n  })\n\n  const validateForm = () => {\n    const errors = addFormValidation(\n      phone, surname, name, email, isVisiblePhone, isVisibleMail, additionalPhone, additionalMail\n    );\n    const withoutErrors = Object.values(errors).every(value => value === '');\n    if (withoutErrors) {\n      let db = window.openDatabase(\"users\", \"1.0\", \"Test DB\", 1000000);\n      const phones = additionalPhone.length ? `${phone}  ${additionalPhone}` : phone;\n      const emails = additionalMail.length ? `${email}  ${additionalMail}` : email;\n      if (db) {\n        if (!isEdit) {\n          db.transaction(function (tx) { \n            tx.executeSql(`INSERT INTO UserData (id, name, surname, phone, email) \n            VALUES (${Date.now()}, \"${name}\", \"${surname}\", \"${phones}\", \"${emails}\" )`); \n          });\n          setMail('');\n          setName('');\n          setPhone('');\n          setSurname('');\n          setAdditionalMail('');\n          setAdditionalPhone('');\n          setIsVisibleMail(false);\n          setIsVisiblePhone(false);\n        }\n        else {\n          db.transaction(function (tx) { \n            console.log('start')\n            tx.executeSql(`UPDATE UserData SET name=\"${name}\", surname=\"${surname}\", phone=\"${phones}\", \n            email=\"${emails}\"\n            WHERE id = ${initialStates.id};`); \n          });\n          finishEditing();\n        }\n      } \n    } else {\n      setInputErrors(errors);\n    }\n  }\n  \n  return (\n    <>\n      <form className=\"add-form\">\n        <input \n          className=\"add-form__input\"\n          type=\"text\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={(ev) => {\n            setName(ev.target.value);\n            setInputErrors({...inputErrors, name: ''})\n          }}\n        />\n        <div className=\"input__error\">{inputErrors.name}</div>\n        <input \n          className=\"add-form__input\"\n          type=\"text\"\n          placeholder=\"Surname\"\n          value={surname}\n          onChange={(ev) => {\n            setSurname(ev.target.value)\n            setInputErrors({...inputErrors, surname: ''})\n          }}\n        />\n        <div className=\"input__error\">{inputErrors.surname}</div>\n\n        <span>\n          <span>\n            <div className=\"add-form__container\">\n              <input \n                className=\"add-form__input\"\n                type=\"tel\"\n                placeholder=\"+38xxxxxxxxxx\"\n                value={phone}\n                onChange={(ev) => {\n                  setPhone(ev.target.value)\n                  setInputErrors({...inputErrors, phone: ''})\n                }}\n              />\n              {\n                !isVisiblePhone &&(\n                  <button className=\"add-form__add\" onClick={() => setIsVisiblePhone(true)}>+</button>   \n                )\n              }\n            </div>\n            <div className=\"input__error\">{inputErrors.phone}</div>\n          </span>\n            {\n              isVisiblePhone && (\n                <>\n                  <input \n                  className=\"add-form__input\"\n                  type=\"tel\"\n                  placeholder=\"+38xxxxxxxxxx\"\n                  value={additionalPhone}\n                  onChange={(ev) => {\n                    setAdditionalPhone(ev.target.value)\n                    setInputErrors({...inputErrors, additionalPhone: ''})\n                  }}\n                />\n                  <div className=\"input__error\">{inputErrors.additionalPhone}</div>\n                </>\n              )\n\n            }\n          <span>\n            <div className=\"add-form__container\">\n              <input \n                className=\"add-form__input\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(ev) => {\n                  setInputErrors({...inputErrors, email: ''})\n                  setMail(ev.target.value)\n                }}\n              />\n              {\n                !isVisibleMail && (\n                  <button className=\"add-form__add\" onClick={() => setIsVisibleMail(true)}>+</button>   \n                )\n              }\n            </div>\n            <div className=\"input__error\">{inputErrors.email}</div>\n            </span>\n            {\n              isVisibleMail && (\n                <>\n                  <input \n                  className=\"add-form__input\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={additionalMail}\n                  onChange={(ev) => {\n                    setInputErrors({...inputErrors, additionalMail: ''})\n                    setAdditionalMail(ev.target.value)\n                  }}\n                />\n                  <div className=\"input__error\">{inputErrors.additionalMail}</div>\n                </>\n              )\n            }\n          <span>\n          </span>\n        </span>\n      </form>\n      <div className=\"add-form__button-wrapper\">\n        <button \n          type='button'\n          className=\"add-form__button\"\n          onClick={validateForm}\n        >\n          Submit\n        </button>\n        {\n          isEdit && (\n            <button \n              type='button'\n              className=\"add-form__button\"\n              onClick={finishEditing}\n            >\n              Cancel\n            </button>\n          )\n        }\n      </div>\n    </>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { UsersPage } from '../SmallComponents/UsersPage';\nimport { AddForm } from '../SmallComponents/AddForm';\nimport { User } from '../../interfaces';\n\nconst zeroState = {\n  name: '',\n  email: '',\n  surname: '',\n  phone: '',\n  additionalPhone: '',\n  additionalMail: '',\n  isPhoneVisible: false,\n  isMailVisible: false,\n  id: '',\n}\n\nexport const Third = () => {\n  const [activeSection, setActiveSection] = useState('List');\n  const [isEdit, setIsEdit] = useState(false);\n  const [initialStates, setInitialStates] = useState(zeroState)\n\n  const startEditing = (user: User) => {\n    setActiveSection('Add');\n    setIsEdit(true);\n    console.log(user.phone.split('  '))\n    const phones = user.phone.split('  ');\n    const emails = user.email.split('  ');\n    const secondPhone = phones.length === 2 ? phones[1] : '';\n    const secondMail = emails.length === 2 ? emails[1] : '';\n    \n    setInitialStates({\n      name: user.name,\n      surname: user.surname,\n      phone: phones[0],\n      additionalMail: secondMail,\n      additionalPhone: secondPhone,\n      email: emails[0],\n      isMailVisible: emails.length === 2,\n      isPhoneVisible: phones.length === 2,\n      id: user.id\n    })\n  }\n\n  const finishEditing = () => {\n    setInitialStates(zeroState);\n    setActiveSection('List');\n    setIsEdit(false);\n  }\n\n  const defineComponent = () => {\n    switch(activeSection) {\n      case 'Add':\n        return <AddForm initialStates={initialStates} isEdit={isEdit} finishEditing={finishEditing}/>;\n      case 'List': \n        return <UsersPage startEditing={startEditing}/>\n      // default:\n      //   return <AddForm />;\n    }\n  }\n\n  useEffect(() => {\n    var db = window.openDatabase(\"users\", \"1.0\", \"Test DB\", 1000000);\n    db.transaction(function (tx) {   \n      tx.executeSql('CREATE TABLE IF NOT EXISTS UserData (id, name, surname, phone, email)');\n   });\n    console.log(1111)\n  }, [])\n  const content = defineComponent();\n\n  return (\n    <div className=\"third page\">\n      <div className=\"third__wrapper\">\n        <button \n          className={activeSection==='Add' ? \"third__tab third__tab--active\" : \"third__tab\"}\n          onClick={() => setActiveSection('Add')}\n        >\n          Add\n        </button>\n        <button \n          className={activeSection==='List' ? \"third__tab third__tab--active\" : \"third__tab\"}\n          onClick={() => setActiveSection('List')}\n        >\n          List\n        </button>\n      </div>\n      {content}\n    </div>\n  )\n}","import React, { useEffect } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { MainPage } from './components/MainPage';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { EnterForm } from './components/EnterForm';\nimport { RegisterForm } from './components/RegisterForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRegisteredUser } from './store/registeredUser';\nimport { setAuthorization } from './store/autorizes';\nimport { getAuthorization } from './store/index';\nimport { LeftNav } from './components/Navigation/LeftNav'\nimport { First } from './components/Pages/First';\nimport { Second } from './components/Pages/Second';\nimport { Third } from './components/Pages/Third';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isLogged = useSelector(getAuthorization);\n  useEffect(() => {\n    const name = localStorage.getItem('user');\n    if (name) {\n      dispatch(setRegisteredUser(name));\n      dispatch(setAuthorization(true));\n    }\n  });\n\n  return (\n      <div className=\"App\">\n        <Navigation />\n        {\n          isLogged && <LeftNav />\n        }\n        <Switch>\n          <Route path=\"/\" exact component={MainPage} />\n          <Route path=\"/home\"><Redirect to=\"/\" /></Route>\n          <Route path=\"/page1\" exact component={First} />\n          <Route path=\"/page2\" exact component={Second} />\n          <Route path=\"/page3\" exact component={Third} />\n          <Route path=\"/enter\" exact component={EnterForm} />\n          <Route path=\"/register\" exact component={RegisterForm} />\n        </Switch>\n      </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}